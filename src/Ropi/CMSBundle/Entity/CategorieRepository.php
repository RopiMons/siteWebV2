<?php

namespace Ropi\CMSBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * CategorieRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CategorieRepository extends EntityRepository {

    public function getLastPosition($id) {

        $retour = $this->createQueryBuilder("cat")
                ->select('count(page.titreMenu)')
                ->join("cat.pages", "page")
                ->where('cat.id = :id')
                ->setParameter('id', intval($id))
                ->getQuery()
                ->getSingleScalarResult()
        ;

        return intval($retour);
    }

    public function loadPages($permissions) {


        $qb = $this->createQueryBuilder("c");

        $qb->select(array('c', 'p','perm'))
                ->innerJoin('c.pages', "p")
                ->leftJoin("p.permissions", "perm")
                ->where('c.isActive = :true')
                ->andWhere('p.isActive = :true')
                ->andWhere('p.publicationDate <= :date')
                ->orderBy('p.position')
                ->setParameter('true', TRUE, \Doctrine\DBAL\Types\Type::BOOLEAN)
                ->setParameter('date', new \DateTime(), \Doctrine\DBAL\Types\Type::DATETIME)
        ;
        return $qb
                        ->getQuery()
                        ->execute()
        ;
    }

    public function getAllOrderedPage() {
        return $this->createQueryBuilder("c")
                        ->select(array('c', 'p'))
                        ->leftJoin("c.pages", "p")
                        ->orderBy("p.position")
                        ->getQuery()
                        ->execute()
        ;
    }

    public function getLastCategoriePosition() {

        $retour = $this->createQueryBuilder("cat")
            ->select('count(cat.nom)')
            ->getQuery()
            ->getSingleScalarResult()
        ;

        return intval($retour);
    }

}
